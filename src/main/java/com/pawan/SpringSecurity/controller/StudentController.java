package com.pawan.SpringSecurity.controller;

import com.pawan.SpringSecurity.model.Student;
import jakarta.servlet.http.HttpServletRequest;
import org.springframework.security.web.csrf.CsrfToken;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.List;
/*
_csrf is the default input field name used by Spring Security to pass the CSRF token from the
frontend (e.g., HTML form) to the backend

If youâ€™re not using form-based submission and are making requests via JavaScript
(like from React or Axios), send the CSRF token as a header instead:
X-CSRF-TOKEN: abc123csrfTokenValue

 */

@RestController
public class StudentController {
    private List<Student> students = new ArrayList<>(List.of(
            new Student(1, "Pawan",98),
            new Student(2, "Pooja", 99)
    ));
    @GetMapping("/students")
    public List<Student> getStudents(){
        return students;
    }

    @PostMapping("/student")
    public Student addStudent(@RequestBody Student student){
        students.add(student);
        return student;
    }

    @GetMapping("/csrf-token")
    public CsrfToken getCsrfToken(HttpServletRequest request){
        //<input name="_csrf" type="hidden" value=" is generated by the following code" />
        return (CsrfToken) request.getAttribute("_csrf");
    }

    @GetMapping("/session-id")
    public String getSessionId(HttpServletRequest request){
        return request.getSession().getId();
    }
}
